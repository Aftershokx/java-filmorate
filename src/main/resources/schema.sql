CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID   INT GENERATED BY DEFAULT AS IDENTITY,
    EMAIL     VARCHAR(255) NOT NULL,
    LOGIN     VARCHAR(255) NOT NULL,
    USER_NAME VARCHAR(255),
    BIRTHDAY  DATE,
    CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS
(
    FRIEND_ID INT NOT NULL,
    USER_ID   INT NOT NULL,
    CONSTRAINT PK_FRIENDS PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT FK_FRIENDS1 FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID),
    CONSTRAINT FK_FRIENDS2 FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID)
);

CREATE TABLE IF NOT EXISTS MPA
(
    MPA_ID INT NOT NULL,
    NAME   VARCHAR(255),
    CONSTRAINT MPA_PK PRIMARY KEY (MPA_ID)
);

CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID      INT GENERATED BY DEFAULT AS IDENTITY,
    FILM_NAME    VARCHAR(255),
    DESCRIPTION  VARCHAR(255),
    RELEASE_DATE DATE,
    DURATION     LONG,
    MPA_ID       INTEGER,
    CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID),
    CONSTRAINT MPA_FK FOREIGN KEY (MPA_ID) REFERENCES MPA
);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID   INT GENERATED BY DEFAULT AS IDENTITY UNIQUE,
    GENRE_NAME VARCHAR(255),
    CONSTRAINT GENRES_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRES
(
    FILM_ID  INT NOT NULL,
    GENRE_ID INT NOT NULL UNIQUE,
    CONSTRAINT FILMS_GENRES_PK PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT FILMS_GENRES_FK_1 FOREIGN KEY (FILM_ID) REFERENCES films (FILM_ID),
    CONSTRAINT FILMS_GENRES_FK_2 FOREIGN KEY (GENRE_ID) REFERENCES genres (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS LIKES
(
    USER_ID INT,
    FILM_ID INT,
    CONSTRAINT LIKES_PK PRIMARY KEY (USER_ID, FILM_ID),
    CONSTRAINT FK_FILMS FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID),
    CONSTRAINT FK_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);